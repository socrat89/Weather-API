{"ast":null,"code":"var _jsxFileName = \"/home/socrat/Desktop/youWeather/w-app/src/component/Hourlyweather.jsx\";\nimport React, { Component } from 'react'; // import React from 'react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Hourlyweather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      icon2: undefined,\n      input: \"\"\n    };\n    this.weatherIcon2 = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atomosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  } //-------------------\n\n\n  get_WeatherIcon2(icons, rangeid) {\n    switch (true) {\n      case rangeid >= 200 && rangeid <= 232:\n        return this.setState({\n          icon: this.weatherIcon2.Thunderstorm\n        });\n\n      case rangeid >= 300 && rangeid <= 321:\n        return this.setState({\n          icon: this.weatherIcon2.Drizzle\n        });\n\n      case rangeid >= 500 && rangeid <= 531:\n        return this.setState({\n          icon: this.weatherIcon2.Rain\n        });\n\n      case rangeid >= 600 && rangeid <= 622:\n        return this.setState({\n          icon: this.weatherIcon2.Snow\n        });\n\n      case rangeid >= 701 && rangeid <= 781:\n        return this.setState({\n          icon: this.weatherIcon.Atomosphere\n        });\n\n      case rangeid === 800:\n        return this.setState({\n          icon: this.weatherIcon.Clear\n        });\n\n      case rangeid >= 800 && rangeid <= 804:\n        return this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n\n      default:\n        return this.setState({\n          icon: this.weatherIcon.snow\n        });\n    }\n  } //-------------------\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: //${this.props.weatherIcon} \n      this.props.hours.map(lsit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: new Date(lsit.dt_txt).getHours().toString() + \":00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `wi ${this.props.get_WeatherIcon2(this.weatherIcon2, lsit.weather[0].id)} display-1`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [lsit.main.temp, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Hourlyweather; //className=\"ppx\"\n//className=\"pp\"\n// // import React from 'react';\n// const todayhour=[\n//   {\n//     time:\"9\",\n//     icon:\"\",\n//     tempnow:\"{props.temp_celsius}\"\n//   },\n//   {\n//     name:\"Yash\",\n//     rollNo:\"124\"\n//   }\n// ]\n// export default todayhour;\n// function App() {\n//   return (\n//     <div style={{margin:'40px'}} >\n//      <h1 style={{color:'green'}}> Geeks For Geeks </h1>\n// <p> Mapping Data to componenet in React js. </p>\n//      {Users.map((e)=>{\n//        return (\n//        <Info name={e.name} rollNo={e.rollNo}/>\n//      );})}\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/socrat/Desktop/youWeather/w-app/src/component/Hourlyweather.jsx"],"names":["React","Component","Hourlyweather","constructor","props","state","icon2","undefined","input","weatherIcon2","Thunderstorm","Drizzle","Rain","Snow","Atomosphere","Clear","Clouds","get_WeatherIcon2","icons","rangeid","setState","icon","weatherIcon","snow","render","hours","map","lsit","Date","dt_txt","getHours","toString","weather","id","main","temp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// import React from 'react';\nclass Hourlyweather extends Component{\n    constructor(props){\n        super(props);\n            this.state={\n                icon2:undefined,\n                \n                input:\"\"\n\n            };\n            this.weatherIcon2={\n                Thunderstorm:\"wi-thunderstorm\",\n                Drizzle:\"wi-sleet\",\n                Rain:\"wi-storm-showers\",\n                Snow:\"wi-snow\",\n                Atomosphere:\"wi-fog\",\n                Clear:\"wi-day-sunny\",\n                Clouds:\"wi-day-fog\"\n              }\n        }\n            //-------------------\n\n\n\n\n            get_WeatherIcon2(icons,rangeid){\n                switch(true){\n                  case rangeid>=200&&rangeid<=232:\n                    return this.setState({icon:this.weatherIcon2.Thunderstorm});\n                    \n                    case rangeid>=300&&rangeid<=321:\n                    return this.setState({icon:this.weatherIcon2.Drizzle});\n                    \n                     case rangeid>=500&&rangeid<=531:\n                      return this.setState({icon:this.weatherIcon2.Rain});\n                \n                     case rangeid>=600&&rangeid<=622:\n                      return this.setState({icon:this.weatherIcon2.Snow});\n                    \n                     case rangeid>=701&&rangeid<=781:\n                      return this.setState({icon:this.weatherIcon.Atomosphere});\n                    \n                     case rangeid===800:\n                      return this.setState({icon:this.weatherIcon.Clear});\n                    \n                     case rangeid>=800&&rangeid<=804:\n                      return this.setState({icon:this.weatherIcon.Clouds});\n                  \n                    default:\n                      return this.setState({icon:this.weatherIcon.snow});\n                }\n              }\n            //-------------------\n    \n    render (){\n         return(\n            <div>\n                { //${this.props.weatherIcon} \n                    this.props.hours.map(lsit=>\n                        <li>\n                        <div>\n                            <h3>{new Date(lsit.dt_txt).getHours().toString() + \":00\"}</h3>\n                            {/* --------- */}\n                            <h5 className=\"py-2\">\n                            <i className={`wi ${this.props.get_WeatherIcon2(this.weatherIcon2,lsit.weather[0].id)} display-1`}/>\n                            \n                            {/* <i className={`wi ${props.weatherIcon} display-6`}/> */}\n                             </h5>\n                            {/* --------- */}\n                            <h3>{lsit.main.temp} <span>&deg;</span></h3>\n                        </div>\n                        </li>\n                        )\n                }\n\n            </div>\n         )       \n    }\n}\nexport default Hourlyweather;\n\n\n\n//className=\"ppx\"\n//className=\"pp\"\n// // import React from 'react';\n// const todayhour=[\n//   {\n//     time:\"9\",\n//     icon:\"\",\n//     tempnow:\"{props.temp_celsius}\"\n//   },\n//   {\n//     name:\"Yash\",\n//     rollNo:\"124\"\n//   }\n// ]\n// export default todayhour;\n\n\n// function App() {\n  \n//   return (\n//     <div style={{margin:'40px'}} >\n//      <h1 style={{color:'green'}}> Geeks For Geeks </h1>\n       \n// <p> Mapping Data to componenet in React js. </p>\n  \n//      {Users.map((e)=>{\n//        return (\n//        <Info name={e.name} rollNo={e.rollNo}/>\n//      );})}\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}