{"ast":null,"code":"var _jsxFileName = \"/home/socrat/Desktop/youWeather/w-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Weather from './component/weather';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css'; //api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIkey = \"266ee41fcb7c9137df50b0d49662e958\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch('http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=' + APIkey);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calcCelsius(response.main.temp),\n        temp_max: this.calcCelsius(response.main.temp_max),\n        temp_min: this.calcCelsius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calcCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Weather, {\n        city: this.state.city,\n        country: this.state.country,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description,\n        weatherIcon: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/socrat/Desktop/youWeather/w-app/src/App.js"],"names":["React","Component","Weather","APIkey","App","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calcCelsius","main","temp","temp_max","temp_min","description","weather","state","undefined","icon","error","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP,C,CAGA;;;AACA,MAAMC,MAAM,GAAC,kCAAb;;AAIA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAiC;AAC/BI,EAAAA,WAAW,GAAE;AACX;;AADW,SAoBbC,UApBa,GAoBF,YAAS;AAClB,YAAMC,QAAQ,GAAE,MAAMC,KAAK,CACzB,sEAAoEL,MAD3C,CAA3B;AAEA,YAAMM,QAAQ,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAACL,QAAQ,CAACM,IADF;AAEZC,QAAAA,OAAO,EAACP,QAAQ,CAACQ,GAAT,CAAaD,OAFT;AAGZE,QAAAA,OAAO,EAAC,KAAKC,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcC,IAA/B,CAHI;AAIZC,QAAAA,QAAQ,EAAC,KAAKH,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcE,QAA/B,CAJG;AAKZC,QAAAA,QAAQ,EAAC,KAAKJ,WAAL,CAAiBV,QAAQ,CAACW,IAAT,CAAcG,QAA/B,CALG;AAMZC,QAAAA,WAAW,EAACf,QAAQ,CAACgB,OAAT,CAAiB,CAAjB,EAAoBD;AANpB,OAAd;AAQD,KAjCY;;AAEX,SAAKE,KAAL,GAAW;AACTZ,MAAAA,IAAI,EAACa,SADI;AAETX,MAAAA,OAAO,EAACW,SAFC;AAGTC,MAAAA,IAAI,EAACD,SAHI;AAITP,MAAAA,IAAI,EAACO,SAJI;AAKTT,MAAAA,OAAO,EAACS,SALC;AAMTL,MAAAA,QAAQ,EAACK,SANA;AAOTJ,MAAAA,QAAQ,EAACI,SAPA;AAQTH,MAAAA,WAAW,EAAC,EARH;AASTK,MAAAA,KAAK,EAAC;AATG,KAAX;AAWA,SAAKvB,UAAL;AACD;;AAEHa,EAAAA,WAAW,CAACE,IAAD,EAAM;AACf,QAAIS,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWX,IAAI,GAAC,MAAhB,CAAT;AACA,WAAOS,IAAP;AACD;;AAeCG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,OAAD;AACA,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWZ,IADjB;AAEA,QAAA,OAAO,EAAE,KAAKY,KAAL,CAAWV,OAFpB;AAGA,QAAA,YAAY,EAAE,KAAKU,KAAL,CAAWR,OAHzB;AAIA,QAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWJ,QAJrB;AAKA,QAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWH,QALrB;AAMA,QAAA,WAAW,EAAE,KAAKG,KAAL,CAAWF,WANxB;AAOA,QAAA,WAAW,EAAE,KAAKE;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAnD8B;;AA2DjC,eAAetB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Weather from './component/weather';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'weather-icons/css/weather-icons.css';\n\n\n//api.openweathermap.org/data/2.5/weather?q=London,uk&appid={API key}\nconst APIkey=\"266ee41fcb7c9137df50b0d49662e958\";\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celsius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n  }\n\ncalcCelsius(temp){\n  let cell=Math.floor(temp-273.15);\n  return cell;\n}\n  getWeather=async()=>{\n    const api_call= await fetch(\n      'http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid='+APIkey);\n    const response=await api_call.json();\n    console.log(response);\n    this.setState({\n      city:response.name,\n      country:response.sys.country,\n      celsius:this.calcCelsius(response.main.temp),\n      temp_max:this.calcCelsius(response.main.temp_max),\n      temp_min:this.calcCelsius(response.main.temp_min),\n      description:response.weather[0].description\n    })\n  }\n  render(){\n    return(\n      <div className=\"App\">\n        <Weather \n        city={this.state.city} \n        country={this.state.country} \n        temp_celsius={this.state.celsius}\n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        weatherIcon={this.state}\n\n\n        />\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}